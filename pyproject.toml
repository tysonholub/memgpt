[tool.black]
line-length = 119
# https://github.com/psf/black/issues/2188
experimental_string_processing = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "--strict-markers --strict-config"
asyncio_mode = "auto"
norecursedirs = [
    ".git",
    ".tox",
    ".env",
    ".venv",
]
testpaths = [
    "pytests",
]
timeout = 60
pythonpath = [
    "pysrc",
]

[tool.poetry]
name = "memgpt"
version = "0.1.0"
description = ""
authors = ["Tyson Holub <tyson@tysonholub.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "memgpt", from="pysrc"}]
include = ["LICENSE"]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
absl-py = "^2.0.0"
colorama = "^0.4.6"
demjson3 = "^3.0.6"
faiss-cpu = "^1.7.4"
geopy = "^2.4.0"
numpy = "^1.26.1"
openai = "^0.28.1"
pybars3 = "^0.9.7"
python-dotenv = "^1.0.0"
pytz = "^2023.3.post1"
rich = "^13.6.0"
tiktoken = "^0.5.1"
timezonefinder = "^6.2.0"
typer = "^0.9"

[tool.poetry.group.dev.dependencies]
coverage = "^7"
pytest = "^7"
pytest-asyncio = "^0.21"
pytest-timeout = "^2"

[tool.isort]
line_length = 119
use_parentheses = true
multi_line_output = 3
include_trailing_comma = true
src_paths = [
    "pysrc",
    "pytests"
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]

[tool.pylint.'FORMAT']
max-line-length = 119

[tool.pylint.'MESSAGES CONTROL']
disable = [
    "wrong-import-position"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = "PyPI"
priority = "default"
